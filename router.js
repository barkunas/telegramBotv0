//module.exports.usersData = usersData
var apiai = require('apiai');

var appAI = apiai("35c8ee44b0e04700bcf9b6d8c7efa7c1");


const fs = require('fs');



console.log('—Å–æ–±–∏—Ä–∞–µ–º –º–æ–¥—É–ª–∏...')
var userStart = require('./router/userStart')
console.log('...–º–æ–¥—É–ª–∏ —Å–æ–±—Ä–∞–Ω—ã')
module.exports.messageRouter = function messageRouter(message, data, selfMybot) {
    switch (message) {
        case '/start':
            console.log('—Å–æ–æ–±—â–µ–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –∫–∞–∫ /start');
            start(message, data, selfMybot)
            break;
        case '/pokormit':
            pokormit(message, data, selfMybot)
            break;
        case '/adminSendMessageAllGeneral':
            //console.log('—Å—Ç–∞—Ä—Ç—É–µ–º —Ä–∞—Å—Å—ã–ª–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –≤—Å–µ–º')
            adminSendMessageAll(message, data, selfMybot)
            break;
        case '/adminUpdateDataJsonOld':
            adminUpdateDataJsonOld(message, data, selfMybot)
            break;
        case '/adminUpdateUserData':
            adminUpdateUserData(message, data, selfMybot)
            break;
        case '/adminObosratsaAllUsers':
            adminObosratsaAllUsers(message, data, selfMybot)
            break;
        case '/adminObosratsaUsers':
            adminObosratsaUsers(message, data, selfMybot)
            break;
        case '/ubrat':
            ubratZaKotom(message, data, selfMybot)
            break;
        case '/adminPingAllWhoObosralsa':
            adminPingAllWhoObosralsa(message, data, selfMybot)
            break;
        default: AIMessageRouter(message, data, selfMybot)
    }
}
function pokormit(message, data, selfMybot) {
    var botId = '976224147'
    var dataPath = __dirname + "\\data.json";
    var usersData;
    usersData = JSON.parse(fs.readFileSync(dataPath, 'utf8'));
    //console.log(usersData);
    var userId = "" + data.from.id;
    var stickerName = "test10" + userId + "_by_kakakaFriendBot";
    var title = "" + stickerName;
    var stickerId = usersData[userId]['stickerId']
    //console.log(usersData[userId][rank])
    if (+usersData[userId]['rank'] < 99) {
        var rank = usersData[userId]['rank'] + 1;
        console.log('—É—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' + rank);
        var img = fs.createReadStream(__dirname + '\\images' + '\\' + rank + '.png');
        selfMybot.addStickerToSet(botId, stickerName, img, "üòÇ").then(() => {
            selfMybot.getStickerSet(stickerName).then((stickerObj) => {
                var stickerInTrash = stickerObj.stickers[0].file_id
                var stickerId = stickerObj.stickers[stickerObj.stickers.length - 1].file_id

                selfMybot.sendSticker(data.chat.id, stickerId).then(() => {
                    selfMybot.deleteStickerFromSet(stickerInTrash)
                })
                selfMybot.sendMessage(data.chat.id, '–ú–ú–ú–ú–ú, –∫–∞–∫ –≤–∫—É—Å–Ω–æ, —Ç–µ–ø–µ—Ä—å –º–æ–π —É—Ä–æ–≤–µ–Ω—å ' + rank + ' . –ö–æ—Ä–º–∏ –º–µ–Ω—è –¥–∞–ª—å—à–µ —á—Ç–æ–±—ã —è —Ä–æ—Å /pokormit')
                usersData[userId] = { 'rank': rank, 'stickerId': stickerId }
                json = JSON.stringify(usersData);
                fs.writeFile(dataPath, json, 'utf8', function (err) {
                    if (err) throw err;
                    console.log('complete');
                })
            }, (err) => (console.log(err)))
        }, (err) => console.log(err));
    } else selfMybot.sendMessage(data.chat.id, '–°–ø–∞—Å–∏–±–æ, –Ω–æ —è —É–∂–µ –Ω–∞–µ–ª—Å—èüòê')
}

function start(message, data, selfMybot) {
    var dataPath = __dirname + "\\data.json"
    var usersData;

    usersData = JSON.parse(fs.readFileSync(dataPath, 'utf8'));
    console.log(data)
    var userId = "" + data.from.id;
    var stickerName = "test10" + userId + "_by_kakakaFriendBot";
    var stickerNameTemp = stickerName
    var title = "" + stickerName;

    if (!usersData[userId]) {
        var first_name = data.from.hasOwnProperty('first_name') ? data.from.first_name : 'empty'
        var last_name = data.from.hasOwnProperty('last_name') ? data.from.last_name : 'empty'
        var username = data.from.hasOwnProperty('username') ? data.from.username : 'empty'
        console.log(__dirname)
        var img = fs.createReadStream(__dirname + '\\images' + '\\0.png')
        var emojis = "üòÇ"
        console.log(img + 'PNGSTIKERHERE-------------------------------------')
        console.log("t.me/addstickers/" + stickerName)
        selfMybot.createNewStickerSet(userId, stickerName, title, img, emojis).then((val) => {
            //console.log(val)
            selfMybot.getStickerSet(stickerNameTemp).then((stickerObj) => {
                console.log(stickerObj)
                var stickerId = stickerObj.stickers[0].file_id
                selfMybot.sendSticker(data.chat.id, stickerId)
                selfMybot.sendMessage(data.chat.id, '–ü—Ä–∏–≤–µ—Ç,—è —Ç–≤–æ–π –Ω–æ–≤—ã–π –¥—Ä—É–≥ –∏ —Ç—ã –º–µ–Ω—è –Ω–∞–π–¥–µ—à—å –≤ —ç—Ç–æ–º —Å—Ç–∏–∫–µ—Ä –ø–∞–∫–µ. –ß—Ç–æ–±—ã –ø–æ–∫–æ—Ä–º–∏—Ç—å –º–µ–Ω—è –æ—Ç–ø—Ä–∞–≤—å /pokormit')
                usersData[userId] = {
                    'isObosralsa': false,
                    'rank': 0,
                    'stickerId': stickerId,
                    'first_name': first_name,
                    'last_name': last_name,
                    'username': username
                }
                json = JSON.stringify(usersData); //convert it back to json
                fs.writeFile(dataPath, json, 'utf8', function (err) {
                    if (err) throw err;
                    console.log('complete');
                })
            })
        }, (err) => console.log(err));

    } else { console.log('—ç—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—Ç–∞—Ä—Ç–∞–Ω—É–ª') }
    //console.log(usersData)

}

function adminSendMessageAll(message, data, selfMybot) {
    var dataPath = __dirname + "\\data.json"
    var usersData = JSON.parse(fs.readFileSync(dataPath, 'utf8'));
    var text = "–°–ª–∞–¥–∫–∏—Ö —Å–Ω–æ–≤!Ô∏èÔ∏èÔ∏èÔ∏èüíãüíãüíã"
    //var usersArr = usersData.arr;
    for (e in usersData) {
        console.log('send to ' + e + '||text: ' + text)
        selfMybot.sendMessage(e, text)
    }
}

function adminUpdateDataJsonOld(message, data, selfMybot) {
    var botId = '976224147'
    var stickerArr = [];
    var dataPath = __dirname + "\\data.json"
    var usersData = JSON.parse(fs.readFileSync(dataPath, 'utf8'));
    for (user in usersData) {
        var stickerName = "test10" + user + "_by_kakakaFriendBot";
        var rank = usersData[user]['rank'];
        console.log('—É—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' + rank);
        var img = fs.createReadStream(__dirname + '\\images' + '\\' + rank + '.png');
        selfMybot.addStickerToSet(botId, stickerName, img, "üòÇ").then(() => {
            selfMybot.getStickerSet(stickerName).then((stickerObj) => {
                var stickerId = stickerObj.stickers[stickerObj.stickers.length - 1].file_id
                usersData[user] = { 'rank': rank, 'stickerId': stickerId }
                json = JSON.stringify(usersData);
                fs.writeFile(dataPath, json, 'utf8', function (err) {
                    if (err) throw err;
                    console.log('complete');
                })
            }, (err) => (console.log(err)))
        }, (err) => console.log(err));

    }


}

function adminUpdateUserData(message, data, selfMybot) {
    var dataPath = __dirname + "\\data.json"
    var usersData = JSON.parse(fs.readFileSync(dataPath, 'utf8'));
    var userArr = []
    for (user2 in usersData) {
        let user = user2
        //userArr.push(user)
        selfMybot.getChat(user).then((chatObj) => {
            //console.log(userData2)
            if (!usersData[chatObj.id].hasOwnProperty('isObosralsa')) { usersData[chatObj.id]['isObosralsa'] = false }
            usersData[chatObj.id]['first_name'] = chatObj.hasOwnProperty('first_name') ? chatObj.first_name : 'empty'
            usersData[chatObj.id]['last_name'] = chatObj.hasOwnProperty('last_name') ? chatObj.last_name : 'empty'
            usersData[chatObj.id]['username'] = chatObj.hasOwnProperty('username') ? chatObj.username : 'empty'


        })
    }
    setTimeout(function () {
        json = JSON.stringify(usersData);
        fs.writeFile(dataPath, json, 'utf8', function (err) {
            if (err) throw err;
            console.log('complete');
        })
    }, 10000)
}
function adminObosratsaUsers(message, data, selfMybot) {
    var user = data.chat.id;
    var dataPath = __dirname + "\\data.json"
    var usersData = JSON.parse(fs.readFileSync(dataPath, 'utf8'));
    var userObj = usersData[user];
    var botId = '976224147'
    
    let stickerId = userObj['stickerId']
    let stickerSetName = "test10" + user + "_by_kakakaFriendBot";
    
    
    if (!userObj.hasOwnProperty('isObosralsa')) { userObj['isObosralsa'] = false }
    if (!userObj['isObosralsa'] && userObj.rank > 3) {
        usersData[user]['rank'] = usersData[user]['rank'] - 3
        usersData[user]['isObosralsa'] = true;
        var img = fs.createReadStream(__dirname + '\\images' + '\\pokakal.png');
        selfMybot.addStickerToSet(botId, stickerSetName, img, "üòÇ").then(() => {
            selfMybot.getStickerSet(stickerSetName).then((stickerObj) => {
                var stickerInTrash = stickerObj.stickers[0].file_id
                var stickerId = stickerObj.stickers[stickerObj.stickers.length - 1].file_id

                selfMybot.sendSticker(user, stickerId).then(() => {
                    selfMybot.deleteStickerFromSet(stickerInTrash)
                })
                selfMybot.sendMessage(user, '–û–ô, –æ—ë—ë–π, –æ–Ω–æ —Å–∞–º–æ!(((üí©üí©üí© –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ -3. /ubrat')
                //usersData[userId] = { 'rank': rank, 'stickerId': stickerId }

            }, (err) => (console.log(err)))
        }, (err) => console.log(err));
    }
    setTimeout(function () {
        json = JSON.stringify(usersData)
        fs.writeFile(dataPath, json, 'utf8', function (err) {
            if (err) throw err;
            console.log('pokakali vse');
        })
    }, 5000)

}
function adminObosratsaAllUsers(message, data, selfMybot) {
    var botId = '976224147'
    var dataPath = __dirname + "\\data.json"
    var usersData = JSON.parse(fs.readFileSync(dataPath, 'utf8'));
    var userArr = []
    for (e in usersData) {
        let userObj = usersData[e]
        let user = e
        let stickerId = userObj['stickerId']
        let stickerSetName = "test10" + user + "_by_kakakaFriendBot";

        if (!userObj.hasOwnProperty('isObosralsa')) { userObj['isObosralsa'] = false }

        if (!userObj['isObosralsa'] && userObj.rank > 3) {
            usersData[user]['rank'] = usersData[user]['rank'] - 3
            usersData[user]['isObosralsa'] = true;
            var img = fs.createReadStream(__dirname + '\\images' + '\\pokakal.png');
            selfMybot.addStickerToSet(botId, stickerSetName, img, "üòÇ").then(() => {
                selfMybot.getStickerSet(stickerSetName).then((stickerObj) => {
                    var stickerInTrash = stickerObj.stickers[0].file_id
                    var stickerId = stickerObj.stickers[stickerObj.stickers.length - 1].file_id

                    selfMybot.sendSticker(user, stickerId).then(() => {
                        selfMybot.deleteStickerFromSet(stickerInTrash)
                    })
                    selfMybot.sendMessage(user, '–û–ô, –æ—ë—ë–π, –æ–Ω–æ —Å–∞–º–æ!(((üí©üí©üí© –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ -3. /ubrat')
                    //usersData[userId] = { 'rank': rank, 'stickerId': stickerId }

                }, (err) => (console.log(err)))
            }, (err) => console.log(err));
        }
        setTimeout(function () {
            json = JSON.stringify(usersData)
            fs.writeFile(dataPath, json, 'utf8', function (err) {
                if (err) throw err;
                console.log('pokakali vse');
            })
        }, 5000)
    }
}
function ubratZaKotom(message, data, selfMybot) {
    var botId = '976224147'
    var dataPath = __dirname + "\\data.json";
    var usersData;
    usersData = JSON.parse(fs.readFileSync(dataPath, 'utf8'));
    //console.log(usersData);
    var userId = "" + data.from.id;
    var stickerName = "test10" + userId + "_by_kakakaFriendBot";
    var title = "" + stickerName;
    var stickerId = usersData[userId]['stickerId']
    //console.log(usersData[userId][rank])
    if (+usersData[userId]['isObosralsa'] == true) {
        var rank = usersData[userId]['rank'];
        var img = fs.createReadStream(__dirname + '\\images' + '\\' + rank + '.png');
        selfMybot.addStickerToSet(botId, stickerName, img, "üòÇ").then(() => {
            selfMybot.getStickerSet(stickerName).then((stickerObj) => {
                var stickerInTrash = stickerObj.stickers[0].file_id
                var stickerId = stickerObj.stickers[stickerObj.stickers.length - 1].file_id

                selfMybot.sendSticker(data.chat.id, stickerId).then(() => {
                    selfMybot.deleteStickerFromSet(stickerInTrash)
                })
                selfMybot.sendMessage(data.chat.id, '‚ù§Ô∏è–°–ø–∞—Å–∏–±–æ, –º–∏–º–∏–º–∏.‚ù§Ô∏è –¢–µ–ø–µ—Ä—å —Ç—É—Ç –ø—Ä–∏—è—Ç–Ω–µ–π –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è))))))‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è')
                usersData[userId] = { 'rank': rank, 'isObosralsa': false }
                json = JSON.stringify(usersData);
                fs.writeFile(dataPath, json, 'utf8', function (err) {
                    if (err) throw err;
                    console.log('complete');
                })
            }, (err) => (console.log(err)))
        }, (err) => console.log(err));
    } else selfMybot.sendMessage(data.chat.id, 'üò°–ß—Ç–æ —Ç—ã —Å–æ–±—Ä–∞–ª—Å—è —Ç—É—Ç —É–±–∏—Ä–∞—Ç—å?????üò°üò°üò° –¢—É—Ç –≤—Å–µ–≥–¥–∞ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∏ –±–∞–±–æ—á–∫–∏ –∏ –ø–∞—Ö–Ω–µ—Ç —Ä–∞–¥—É–≥–æ–π')
}
function adminPingAllWhoObosralsa(message, data, selfMybot) {

    var dataPath = __dirname + "\\data.json"
    var usersData = JSON.parse(fs.readFileSync(dataPath, 'utf8'));
    var text = '–¢—ã —É —Å–µ–±—è –¥–æ–º–∞ —Ç–æ–∂–µ –Ω–µ —É–±–∏—Ä–∞–µ—à—å? –¢—É—Ç –æ—á–µ–Ω—å —Å–∏–ª—å–Ω–æ –≤–æ–Ω—è–µ—Ç. –£–±–µ—Ä–∏—Å—å –∑–∞ –º–Ω–æ–π –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ /ubrat'
    //var usersArr = usersData.arr;
    for (e in usersData) {
        if (usersData[e]['isObosralsa']) {
            console.log('send to ' + e + '||text: ' + text)
            selfMybot.sendMessage(e, text)
        }
    }

}

function AIMessageRouter(message, data, selfMybot) {
    var user = data.chat.id;
    var request = appAI.textRequest(message, {
        sessionId: '' + user
    });

    request.on('response', function (response) {
        var textMsg = response.result.fulfillment.speech
        selfMybot.sendMessage(user, ' ' + textMsg)
        console.log(textMsg + '||–ò–ò||user is ' + user);
    });

    request.on('error', function (error) {
        console.log(error);
    });

    request.end();
}